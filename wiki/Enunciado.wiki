#labels Featured
#Enunciado del ejercicio resuelto en el repositorio.

= Introduction =

Add your content here.


= Details =
Aterrizar.com
Grandes sucesos han marcado la historia de la informática como el Therac-25 o el vuelo 501 
del cohete Ariane 5 pero hoy nos encontramos frente a un hito de inconmensurables 
proporciones, usted tiene la oportunidad de llevar a la vida el sistema de aterrizar.com 
¿Qué es aterrizar.com? 
Ya sea si sos un ejecutivo que vuela a Los Ángeles 9 veces por semana o si tenés intenciones 
de realizar tu primer viaje en avión, aterrizar.com es lo que estabas buscando.
Los usuarios de aterrizar.com son de esas personas que necesitan obtener el mejor precio. Ya  
sea que prefieras volar en primera clase o si tu sueldo sólo te permite viajar en turista, si tenés  
preferencias de horarios o si podés viajar a la 5 de la mañana aterrizar.com tiene lo que 
buscás. Nos ponemos en contacto con todas las aerolíneas por vos para poder ofrecerte la 
mayor oferta de vuelos siempre ajustándose a tus necesidades y a tu bolsillo.
Objetivos
Objetivos generales
El trabajo práctico debe realizarse en grupos de 5 personas. El trabajo práctico tiene como 
objetivo garantizar que durante el transcurso de la materia todos los estudiantes pasen por la 
experiencia de:
● participar en un diseño complejo,
● bajar a código sus ideas de diseño en una computadora y verificar su funcionamiento 
mediante la utilización de test cases.
● participar de una experiencia de trabajo grupal basada en herramientas de colaboración 
de tipo industrial, en particular compartiendo el código mediante un repositorio de 
fuentes compartido 
Para garantizar esto habrá tareas individuales y grupales. La entrega global deberá ser una 
sola para todo el grupo, pero identificando en donde se solicite las responsabilidades que tomó 
cada uno. De esta forma se logra un ambiente de trabajo similar al profesional, en el que cada 
uno tiene su responsabilidad individual sobre un proyecto compartido y el éxito del proyecto 
depende del trabajo conjunto.
La evaluación del TP tendrá dos calificaciones, una grupal y otra individual. Cada docente 
establecerá la forma de evaluar al grupo, es posible que se realice un coloquio en el
que cada integrante deberá defender la solución propuesta por él y por el grupo.Interacción con el tutor
Cada grupo tendrá asignado un tutor que los guiará no sólo para ir encontrando la mejor 
solución posible sino también en cuanto al proceso de trabajo, ambos aspectos son igualmente 
importantes para la materia y serán tenidos en cuenta para decidir la aprobación o no del 
trabajo práctico. 
Consideramos muy importante interactuar frecuentemente con el tutor y no esperar a la fecha 
de entrega para realizar las consultas. No se aceptarán entregas fuera de término, ya que esto 
es contrario a las necesidades del aprendizaje, las fechas no están puestas por capricho sino 
para ayudarlos a asimilar los conocimientos de la mejor manera posible. Si un grupo o un 
integrante no puede asistir al da de la entrega deberá responsabilizarse de coordinar una 
alternativa con el tutor, en forma previa a la fecha límite. Además, consideramos muy
importante interactuar frecuentemente con el tutor y recomendamos no esperar a la fecha de 
entrega para realizar las consultas.
Modo de trabajo y entrega
Cada grupo tendrá asignado su proyecto con el siguiente formato
aterrizar-cccc-nn donde 
cccc = es el número del curso (ej: los miércoles a la noche será 3052)
nn = es el número de grupo asignado (01, 02, etc.).
Para la primera entrega, como cada integrante debe manejar un proyecto por separado de los 
demás, se debe generar un proyecto:
aterrizar-cccc-nn-ii donde 
cccc = es el número del curso (ej: los miércoles a la noche será 3052)
nn = es el número de grupo asignado (01, 02, etc.).
ii = es el número de integrante (01 al 05)
Para realizar el TP y almacenar tanto el código fuente como los documentos se deberá crear un 
área de trabajo compartida basada en un repositorio con capacidad de versionado, por ejemplo 
se pueden utilizar los repositorios svn provistos en www.xp-dev.com.
En cada entrega se deberá contar con el código en el aula para poder validarla. Quienes 
tengan la posibilidad de traerla en su propia notebook podrán hacerlo, en caso contrario 
deberán coordinar con el tutor para que el pueda tener el código en su propia notebook o el 
mecanismo alternativo que decidan en conjunto con el tutor. En caso que no contar con el 
código para evaluarlo en el momento de la entrega, la misma se considerará desaprobada.
En caso de ausencia deben comunicarse con su docente para coordinar la entrega y la 
consiguiente defensa.Entrega 1 (Individual)
Estamos en la hora cero del proyecto. Mientras la gente de nuestro comercial sale a la 
búsqueda de aerolíneas quieran ofrecer sus vuelos en nuestro portal, el equipo tiene la difícil 
tarea de diseñar cómo la aplicación va a manejar las fechas de los vuelos.
¿Qué día es hoy?
En aterrizar.com haremos muchas búsquedas, particularmente por fechas. Para ello 
necesitaremos:
● Convertir un String a un a una fecha, empleando algún formato. Debemos soportar los 
siguientes requerimientos:
○ ISO8601 (el estándar internacional). Las fechas se presentan en formato yyyyMM-dd
○ Latinoamericano: Las fechas se presentan en formato dd/MM/yyyy
○ Norteamericano: La fechas se representan MM-dd-yyyy
○ Flexible: tiene un conjunto de formatos, convierte con el primero que pueda 
parsear la fecha.
Los casos en donde no se pueda convertir el String en una fecha, deben siempre ser 
considerados errores.
● Saber cuántos días pasaron entre dos fechas (en módulo). 
● Dadas una fecha A y una fecha B saber si la fecha A es anterior a la fecha B
Se pide:
● Crear distintos casos de prueba que contemplen los distintos formatos y requerimientos 
que necesita aterrizar.com con respecto a las fechas
● Resolver lo pedido
● Explicar en un documento (.txt, .doc, etc.) cuáles fueron las principales decisiones de 
diseño que tomaron, qué alternativas surgieron y el motivo por el cual se definieron por 
la solución que presentan.
Nota importante: para que la entrega esté ok deben completarse los tres puntos pedidos (test, 
código, documentación).Entrega 2 (Grupal)
Introducción 
¡Firmamos contrato con Aerolínea Lanchita! Esta es la primera aerolínea que se suma a 
aterrizar.com pero próximamente habrá muchas más.
¿Cómo interactúa el usuario con nuestro sistema?
● El usuario se registra suministrando los siguientes datos: nombre, apellido y DNI
● El usuario realiza búsquedas por lugar de origen, destino, fecha de salida y fecha de 
llegada; el sistema le ofrece los vuelos que cumplan con esos requerimientos (por el 
momento los vuelos son sólo de ida y sin escalas). 
● El usuario compra uno de los vuelos ofrecidos por el sistema
Comunicación
Aerolínea Lanchita ofrece la siguiente interfaz para poder comunicarnos con ellos:
AerolineaLanchita.asientosDisponibles(
String origen, 
String fechaSalida, 
String horaSalida, 
String destino, 
String fechaLlegada, 
String horaLlegada)
Los parámetros de este mensaje son todos opcionales: Lanchita asume que si dejamos un 
parámetro vacío (e.g. por ejemplo enviando un null) toma como válido cualquier valor sobre ese 
parámetro. Por ejemplo: el mensaje 
asientosDisponibles("BUE", "20121010",  null, "LA", null, null)
significa que deseamos vuelos entre Buenos aires y Los Ángeles a partir del 10-10-2012.Este mensaje devuelve una lista donde cada elemento es otra lista con Strings que representa 
cada dato del asiento:
1. el código de asiento (número de vuelo seguido por un guión y luego seguido por el 
número de asiento)
2. el precio definido por la aerolínea para ese asiento
3. la clase en la que se encuentra el asiento (turista, ejecutiva o primera clase)
4. la ubicación del asiento en el avión (ventana, centro o pasillo)
5. y el estado del asiento (reservado o disponible, por el momento solo se reciben asientos 
disponibles)
Ejemplo
[["EC0344-42","565.60","P","P","D"], ["EC0344-
66","365.60","T","E","D"], … ]
Las aerolíneas que se agreguen a aterrizar.com en siguientes entregas serán 
responsables de proveernos sus interfaces.
Registro de un usuario
Existen distintos usuarios: los estándar (o sea, los que pagan por el servicio), los VIP (usuarios 
estándar que superan entre todas sus compras una suma de $100.000) y los que no pagan.
En esta entrega se deberá contemplar su existencia, pero aún no su registración (alta de 
usuarios).
Búsquedas
Con la información provista por el usuario (por ejemplo: origen, destino y fecha) se obtiene la 
lista de asientos disponibles para los vuelos de Aerolínea Lanchita que cumplan con esas 
restricciones. 
De forma opcional la búsqueda puede incluir la clase del asiento (turista, ejecutivo o primera 
clase) y su ubicación en el avión (pasillo, centro o ventanilla). Estos asientos que se obtienen 
en la búsqueda deben mostrar el detalle de su precio siguiendo el cálculo que se explica 
debajo.
El precio total de un asiento es el precio arreglado con la aerolínea (especificado en la 
información que nos provee), más un porcentaje por impuestos que varía de aerolínea en 
aerolínea (en particular para Aerolínea Lanchita este porcentaje es del 15%) más un recargo 
según el tipo de usuario que está haciendo la búsqueda: si el usuario no tiene una cuenta paga 
en aterrizar.com, debe pagar un recargo de $20. Existen asientos que son considerados super ofertas, estos son aquellos asientos que 
cumplen con alguna de las siguientes condiciones
● son de primera clase y su precio total es menor a $8000
● son de clase ejecutiva y su precio total es menor a $4000
Los asientos que son super ofertas sólo aparecen en las búsquedas de usuarios VIP.
Independientemente de si el usuario compra o no algún vuelo, todas sus búsquedas son 
guardadas en su perfil, en principio, con fines estadísticos.
Compra de vuelos
Un usuario puede comprar uno de los asientos encontrados en la búsqueda.
Cuando un usuario compra un vuelo, el vuelo deja de estar disponible definitivamente para 
cualquier otro usuario y no aparece más en ninguna búsqueda.
Se debe registrar dicha compra en la aerolínea. A tal fin, Aerolínea Lanchita expone en su 
interfaz el siguiente método:
AerolineaLanchita.comprar(String codigoAsiento) 
que lanzará una excepción de tipo AsientoLanchitaNoDisponibleException en caso de que el 
código de asiento no sea válido, o corresponda a un asiento ya vendido (lo cual puede ocurrir si 
el asiento fue vendido a través de otro portal).